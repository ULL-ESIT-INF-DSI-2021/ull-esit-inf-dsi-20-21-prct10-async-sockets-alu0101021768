{"/home/usuario/workspace/prct10-async-sockets/src/eventEmitterClient.ts":{"path":"/home/usuario/workspace/prct10-async-sockets/src/eventEmitterClient.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":43}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":10,"column":8},"end":{"line":10,"column":16}},"4":{"start":{"line":11,"column":19},"end":{"line":11,"column":21}},"5":{"start":{"line":12,"column":8},"end":{"line":15,"column":11}},"6":{"start":{"line":13,"column":12},"end":{"line":13,"column":26}},"7":{"start":{"line":14,"column":12},"end":{"line":14,"column":51}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":62}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":28},"end":{"line":16,"column":5}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":30},"end":{"line":12,"column":31}},"loc":{"start":{"line":12,"column":41},"end":{"line":15,"column":9}},"line":12}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1},"f":{"0":2,"1":2},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/workspace/prct10-async-sockets/src/eventEmitterClient.ts","sources":["/home/usuario/workspace/prct10-async-sockets/src/eventEmitterClient.ts"],"names":[],"mappings":";;;AAAA,mCAAoC;AAEpC;;GAEG;AACH,MAAa,yBAA0B,SAAQ,qBAAY;IACzD,YAAY,UAAwB;QAClC,KAAK,EAAE,CAAC;QACR,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,UAAU,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,EAAE;YAC9B,IAAI,IAAI,KAAK,CAAC;YACd,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AATD,8DASC","sourcesContent":["import {EventEmitter} from 'events';\n\n/**\n * @description Class that inherits from EventEmitter and emits a 'message' event\n */\nexport class MessageEventEmitterClient extends EventEmitter {\n  constructor(connection: EventEmitter) {\n    super();\n    let data = '';\n    connection.on('data', (chunk) => {\n      data += chunk;\n      this.emit('message', JSON.parse(data));\n    });\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"65277d48e6b13eb1fb795f8e1a71f5b151b263f2","contentHash":"733b96f1fc0cac523e4a35d5b950fcc1ced8491cf930c3dbb45736eb3692b749"},"/home/usuario/workspace/prct10-async-sockets/src/eventEmitterServer.ts":{"path":"/home/usuario/workspace/prct10-async-sockets/src/eventEmitterServer.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":43}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":34}},"4":{"start":{"line":6,"column":12},"end":{"line":6,"column":26}},"5":{"start":{"line":13,"column":8},"end":{"line":13,"column":16}},"6":{"start":{"line":14,"column":8},"end":{"line":14,"column":62}},"7":{"start":{"line":15,"column":8},"end":{"line":72,"column":11}},"8":{"start":{"line":16,"column":12},"end":{"line":16,"column":44}},"9":{"start":{"line":17,"column":23},"end":{"line":17,"column":25}},"10":{"start":{"line":18,"column":12},"end":{"line":20,"column":15}},"11":{"start":{"line":19,"column":16},"end":{"line":19,"column":30}},"12":{"start":{"line":21,"column":12},"end":{"line":63,"column":15}},"13":{"start":{"line":22,"column":16},"end":{"line":22,"column":60}},"14":{"start":{"line":23,"column":32},"end":{"line":23,"column":48}},"15":{"start":{"line":24,"column":29},"end":{"line":24,"column":31}},"16":{"start":{"line":25,"column":28},"end":{"line":25,"column":30}},"17":{"start":{"line":26,"column":16},"end":{"line":54,"column":17}},"18":{"start":{"line":28,"column":24},"end":{"line":28,"column":118}},"19":{"start":{"line":29,"column":24},"end":{"line":31,"column":25}},"20":{"start":{"line":30,"column":28},"end":{"line":30,"column":43}},"21":{"start":{"line":32,"column":24},"end":{"line":32,"column":30}},"22":{"start":{"line":34,"column":24},"end":{"line":34,"column":121}},"23":{"start":{"line":35,"column":24},"end":{"line":37,"column":25}},"24":{"start":{"line":36,"column":28},"end":{"line":36,"column":43}},"25":{"start":{"line":38,"column":24},"end":{"line":38,"column":30}},"26":{"start":{"line":40,"column":24},"end":{"line":40,"column":92}},"27":{"start":{"line":41,"column":24},"end":{"line":43,"column":25}},"28":{"start":{"line":42,"column":28},"end":{"line":42,"column":43}},"29":{"start":{"line":44,"column":24},"end":{"line":44,"column":30}},"30":{"start":{"line":46,"column":24},"end":{"line":46,"column":90}},"31":{"start":{"line":47,"column":24},"end":{"line":49,"column":25}},"32":{"start":{"line":48,"column":28},"end":{"line":48,"column":43}},"33":{"start":{"line":50,"column":24},"end":{"line":50,"column":30}},"34":{"start":{"line":52,"column":24},"end":{"line":52,"column":76}},"35":{"start":{"line":53,"column":24},"end":{"line":53,"column":30}},"36":{"start":{"line":55,"column":33},"end":{"line":59,"column":17}},"37":{"start":{"line":60,"column":16},"end":{"line":60,"column":55}},"38":{"start":{"line":61,"column":16},"end":{"line":61,"column":59}},"39":{"start":{"line":62,"column":16},"end":{"line":62,"column":33}},"40":{"start":{"line":64,"column":12},"end":{"line":68,"column":15}},"41":{"start":{"line":65,"column":16},"end":{"line":67,"column":17}},"42":{"start":{"line":66,"column":20},"end":{"line":66,"column":87}},"43":{"start":{"line":69,"column":12},"end":{"line":71,"column":15}},"44":{"start":{"line":70,"column":16},"end":{"line":70,"column":51}},"45":{"start":{"line":75,"column":8},"end":{"line":77,"column":11}},"46":{"start":{"line":76,"column":12},"end":{"line":76,"column":74}},"47":{"start":{"line":80,"column":0},"end":{"line":80,"column":62}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":18},"end":{"line":73,"column":5}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":64},"end":{"line":15,"column":65}},"loc":{"start":{"line":15,"column":80},"end":{"line":72,"column":9}},"line":15},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":34},"end":{"line":18,"column":35}},"loc":{"start":{"line":18,"column":45},"end":{"line":20,"column":13}},"line":18},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":33},"end":{"line":21,"column":34}},"loc":{"start":{"line":21,"column":39},"end":{"line":63,"column":13}},"line":21},"4":{"name":"(anonymous_4)","decl":{"start":{"line":64,"column":35},"end":{"line":64,"column":36}},"loc":{"start":{"line":64,"column":44},"end":{"line":68,"column":13}},"line":64},"5":{"name":"(anonymous_5)","decl":{"start":{"line":69,"column":35},"end":{"line":69,"column":36}},"loc":{"start":{"line":69,"column":41},"end":{"line":71,"column":13}},"line":69},"6":{"name":"(anonymous_6)","decl":{"start":{"line":74,"column":4},"end":{"line":74,"column":5}},"loc":{"start":{"line":74,"column":17},"end":{"line":78,"column":5}},"line":74},"7":{"name":"(anonymous_7)","decl":{"start":{"line":75,"column":33},"end":{"line":75,"column":34}},"loc":{"start":{"line":75,"column":39},"end":{"line":77,"column":9}},"line":75}},"branchMap":{"0":{"loc":{"start":{"line":26,"column":16},"end":{"line":54,"column":17}},"type":"switch","locations":[{"start":{"line":27,"column":20},"end":{"line":32,"column":30}},{"start":{"line":33,"column":20},"end":{"line":38,"column":30}},{"start":{"line":39,"column":20},"end":{"line":44,"column":30}},{"start":{"line":45,"column":20},"end":{"line":50,"column":30}},{"start":{"line":51,"column":20},"end":{"line":53,"column":30}}],"line":26},"1":{"loc":{"start":{"line":29,"column":24},"end":{"line":31,"column":25}},"type":"if","locations":[{"start":{"line":29,"column":24},"end":{"line":31,"column":25}},{"start":{"line":29,"column":24},"end":{"line":31,"column":25}}],"line":29},"2":{"loc":{"start":{"line":35,"column":24},"end":{"line":37,"column":25}},"type":"if","locations":[{"start":{"line":35,"column":24},"end":{"line":37,"column":25}},{"start":{"line":35,"column":24},"end":{"line":37,"column":25}}],"line":35},"3":{"loc":{"start":{"line":41,"column":24},"end":{"line":43,"column":25}},"type":"if","locations":[{"start":{"line":41,"column":24},"end":{"line":43,"column":25}},{"start":{"line":41,"column":24},"end":{"line":43,"column":25}}],"line":41},"4":{"loc":{"start":{"line":47,"column":24},"end":{"line":49,"column":25}},"type":"if","locations":[{"start":{"line":47,"column":24},"end":{"line":49,"column":25}},{"start":{"line":47,"column":24},"end":{"line":49,"column":25}}],"line":47},"5":{"loc":{"start":{"line":57,"column":29},"end":{"line":57,"column":60}},"type":"cond-expr","locations":[{"start":{"line":57,"column":48},"end":{"line":57,"column":53}},{"start":{"line":57,"column":56},"end":{"line":57,"column":60}}],"line":57},"6":{"loc":{"start":{"line":65,"column":16},"end":{"line":67,"column":17}},"type":"if","locations":[{"start":{"line":65,"column":16},"end":{"line":67,"column":17}},{"start":{"line":65,"column":16},"end":{"line":67,"column":17}}],"line":65}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":5,"6":5,"7":5,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1},"f":{"0":5,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"0":[0,0,0,0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/workspace/prct10-async-sockets/src/eventEmitterServer.ts","sources":["/home/usuario/workspace/prct10-async-sockets/src/eventEmitterServer.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport {EventEmitter} from 'events';\nimport {RequestType, ResponseType} from './types';\nimport {Notes} from './notes';\nimport * as net from 'net';\n\n/**\n * @description Class that inherits from EventEmitter and process all the clients\n * requests and sends a response \n */\nexport class MessageEventEmitterServer extends EventEmitter {\n  private notesInstance: Notes;\n  private server: net.Server;\n  constructor() {\n    super();\n\n    this.notesInstance = Notes.getNotesInstance();\n    this.server = net.createServer({allowHalfOpen: true}, (connection) => {\n      console.log('Client connected');\n\n      let data = '';\n      connection.on('data', (chunk) => {\n        data += chunk;\n      });\n\n      connection.on('end', () => {\n        console.log('Request received from client');\n\n        const request: RequestType = JSON.parse(data);\n\n        let output = '';\n        let error = '';\n        switch (request.type) {\n          case 'add':\n            output = this.notesInstance.addNote(request.user as string,\n          request.title as string,\n          request.body as string,\n          request.color as string);\n            if (output !== \"New note added!\") {\n              error = output;\n            }\n            break;\n          case 'modify':\n            output = this.notesInstance.modifyNote(request.user as string,\n          request.title as string,\n          request.body as string,\n          request.color as string);\n            if (output !== \"Note modified succesfully!\") {\n              error = output;\n            }\n            break;\n          case 'remove':\n            output = this.notesInstance.removeNote(request.user as string,\n          request.title as string);\n            if (output !== \"Note removed!\") {\n              error = output;\n            }\n            break;\n          case 'read':\n            output = this.notesInstance.readNote(request.user as string,\n          request.title as string);\n            if (output === \"Note not found!\") {\n              error = output;\n            }\n            break;\n          case 'list':\n            output = this.notesInstance.listNotes(request.user as string);\n            break;\n        }\n        const response: ResponseType = {\n          type: request.type,\n          success: error.length > 1 ? false : true,\n          output: output,\n        };\n\n        console.log('Response sent to client');\n        connection.write(JSON.stringify(response));\n        connection.end();\n      });\n\n      connection.on('error', (err) => {\n        if (err) {\n          console.log(`Connection could not be established: ${err.message}`);\n        }\n      });\n\n      connection.on('close', () => {\n        console.log('Client disconnected');\n      });\n    });\n  }\n  listen(port: number) {\n    this.server.listen(port, () => {\n      console.log(`Waiting for clients to connect on port ${port}`);\n    });\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3c848e57143b0b6037d780a538438e48518cac98","contentHash":"20834afd8f4a411b12798cd44ef7d21a86ce6ff282744828b4de95f6a99ac709"},"/home/usuario/workspace/prct10-async-sockets/src/notes.ts":{"path":"/home/usuario/workspace/prct10-async-sockets/src/notes.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":4,"column":14},"end":{"line":4,"column":30}},"3":{"start":{"line":5,"column":13},"end":{"line":5,"column":26}},"4":{"start":{"line":6,"column":13},"end":{"line":6,"column":26}},"5":{"start":{"line":7,"column":13},"end":{"line":7,"column":26}},"6":{"start":{"line":8,"column":13},"end":{"line":8,"column":26}},"7":{"start":{"line":9,"column":13},"end":{"line":9,"column":26}},"8":{"start":{"line":10,"column":13},"end":{"line":10,"column":26}},"9":{"start":{"line":11,"column":13},"end":{"line":11,"column":26}},"10":{"start":{"line":16,"column":21},"end":{"line":16,"column":38}},"11":{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},"12":{"start":{"line":36,"column":12},"end":{"line":36,"column":46}},"13":{"start":{"line":38,"column":8},"end":{"line":38,"column":35}},"14":{"start":{"line":51,"column":21},"end":{"line":51,"column":86}},"15":{"start":{"line":52,"column":20},"end":{"line":52,"column":39}},"16":{"start":{"line":53,"column":26},"end":{"line":53,"column":42}},"17":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"18":{"start":{"line":55,"column":12},"end":{"line":55,"column":39}},"19":{"start":{"line":57,"column":8},"end":{"line":57,"column":44}},"20":{"start":{"line":58,"column":8},"end":{"line":58,"column":33}},"21":{"start":{"line":72,"column":20},"end":{"line":72,"column":39}},"22":{"start":{"line":73,"column":26},"end":{"line":73,"column":42}},"23":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"24":{"start":{"line":75,"column":12},"end":{"line":75,"column":32}},"25":{"start":{"line":77,"column":25},"end":{"line":77,"column":53}},"26":{"start":{"line":78,"column":27},"end":{"line":78,"column":58}},"27":{"start":{"line":79,"column":22},"end":{"line":79,"column":26}},"28":{"start":{"line":80,"column":23},"end":{"line":80,"column":28}},"29":{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},"30":{"start":{"line":82,"column":12},"end":{"line":82,"column":38}},"31":{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},"32":{"start":{"line":85,"column":12},"end":{"line":85,"column":40}},"33":{"start":{"line":87,"column":21},"end":{"line":87,"column":92}},"34":{"start":{"line":88,"column":8},"end":{"line":88,"column":44}},"35":{"start":{"line":89,"column":8},"end":{"line":89,"column":44}},"36":{"start":{"line":99,"column":20},"end":{"line":99,"column":39}},"37":{"start":{"line":100,"column":26},"end":{"line":100,"column":42}},"38":{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},"39":{"start":{"line":102,"column":12},"end":{"line":102,"column":32}},"40":{"start":{"line":104,"column":8},"end":{"line":104,"column":31}},"41":{"start":{"line":105,"column":8},"end":{"line":107,"column":9}},"42":{"start":{"line":106,"column":12},"end":{"line":106,"column":32}},"43":{"start":{"line":108,"column":8},"end":{"line":108,"column":31}},"44":{"start":{"line":117,"column":20},"end":{"line":117,"column":39}},"45":{"start":{"line":118,"column":26},"end":{"line":118,"column":42}},"46":{"start":{"line":119,"column":8},"end":{"line":121,"column":9}},"47":{"start":{"line":120,"column":12},"end":{"line":120,"column":32}},"48":{"start":{"line":122,"column":25},"end":{"line":122,"column":53}},"49":{"start":{"line":123,"column":27},"end":{"line":123,"column":58}},"50":{"start":{"line":124,"column":23},"end":{"line":124,"column":89}},"51":{"start":{"line":125,"column":8},"end":{"line":125,"column":22}},"52":{"start":{"line":133,"column":20},"end":{"line":133,"column":39}},"53":{"start":{"line":134,"column":19},"end":{"line":134,"column":31}},"54":{"start":{"line":135,"column":8},"end":{"line":140,"column":11}},"55":{"start":{"line":136,"column":29},"end":{"line":136,"column":58}},"56":{"start":{"line":137,"column":31},"end":{"line":137,"column":62}},"57":{"start":{"line":138,"column":26},"end":{"line":138,"column":42}},"58":{"start":{"line":139,"column":12},"end":{"line":139,"column":58}},"59":{"start":{"line":141,"column":8},"end":{"line":141,"column":20}},"60":{"start":{"line":150,"column":22},"end":{"line":150,"column":37}},"61":{"start":{"line":151,"column":8},"end":{"line":153,"column":9}},"62":{"start":{"line":152,"column":12},"end":{"line":152,"column":34}},"63":{"start":{"line":154,"column":8},"end":{"line":154,"column":21}},"64":{"start":{"line":157,"column":0},"end":{"line":157,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":18},"end":{"line":28,"column":5}},"line":26},"1":{"name":"(anonymous_1)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":30},"end":{"line":39,"column":5}},"line":34},"2":{"name":"(anonymous_2)","decl":{"start":{"line":50,"column":4},"end":{"line":50,"column":5}},"loc":{"start":{"line":50,"column":38},"end":{"line":59,"column":5}},"line":50},"3":{"name":"(anonymous_3)","decl":{"start":{"line":71,"column":4},"end":{"line":71,"column":5}},"loc":{"start":{"line":71,"column":41},"end":{"line":90,"column":5}},"line":71},"4":{"name":"(anonymous_4)","decl":{"start":{"line":98,"column":4},"end":{"line":98,"column":5}},"loc":{"start":{"line":98,"column":28},"end":{"line":109,"column":5}},"line":98},"5":{"name":"(anonymous_5)","decl":{"start":{"line":116,"column":4},"end":{"line":116,"column":5}},"loc":{"start":{"line":116,"column":26},"end":{"line":126,"column":5}},"line":116},"6":{"name":"(anonymous_6)","decl":{"start":{"line":132,"column":4},"end":{"line":132,"column":5}},"loc":{"start":{"line":132,"column":20},"end":{"line":142,"column":5}},"line":132},"7":{"name":"(anonymous_7)","decl":{"start":{"line":135,"column":38},"end":{"line":135,"column":39}},"loc":{"start":{"line":135,"column":48},"end":{"line":140,"column":9}},"line":135},"8":{"name":"(anonymous_8)","decl":{"start":{"line":149,"column":4},"end":{"line":149,"column":5}},"loc":{"start":{"line":149,"column":19},"end":{"line":155,"column":5}},"line":149}},"branchMap":{"0":{"loc":{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},{"start":{"line":35,"column":8},"end":{"line":37,"column":9}}],"line":35},"1":{"loc":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},{"start":{"line":54,"column":8},"end":{"line":56,"column":9}}],"line":54},"2":{"loc":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"type":"if","locations":[{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},{"start":{"line":74,"column":8},"end":{"line":76,"column":9}}],"line":74},"3":{"loc":{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},"type":"if","locations":[{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},{"start":{"line":81,"column":8},"end":{"line":83,"column":9}}],"line":81},"4":{"loc":{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},"type":"if","locations":[{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},{"start":{"line":84,"column":8},"end":{"line":86,"column":9}}],"line":84},"5":{"loc":{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},"type":"if","locations":[{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},{"start":{"line":101,"column":8},"end":{"line":103,"column":9}}],"line":101},"6":{"loc":{"start":{"line":105,"column":8},"end":{"line":107,"column":9}},"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":107,"column":9}},{"start":{"line":105,"column":8},"end":{"line":107,"column":9}}],"line":105},"7":{"loc":{"start":{"line":119,"column":8},"end":{"line":121,"column":9}},"type":"if","locations":[{"start":{"line":119,"column":8},"end":{"line":121,"column":9}},{"start":{"line":119,"column":8},"end":{"line":121,"column":9}}],"line":119},"8":{"loc":{"start":{"line":151,"column":8},"end":{"line":153,"column":9}},"type":"if","locations":[{"start":{"line":151,"column":8},"end":{"line":153,"column":9}},{"start":{"line":151,"column":8},"end":{"line":153,"column":9}}],"line":151}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":5,"12":1,"13":5,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1},"f":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"0":[1,4],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/workspace/prct10-async-sockets/src/notes.ts","sources":["/home/usuario/workspace/prct10-async-sockets/src/notes.ts"],"names":[],"mappings":"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","sourcesContent":["import * as chalk from 'chalk';\nimport {existsSync} from 'fs';\nimport {mkdirSync} from 'fs';\nimport {writeFileSync} from 'fs';\nimport {readdirSync} from 'fs';\nimport {readFileSync} from 'fs';\nimport {rmSync} from 'fs';\nimport {rmdirSync} from 'fs';\n\n/**\n * @description Const used to store a repeated message\n * and not have to write it everytime it's needed\n */\nconst noteNotFound = 'Note not found!';\n\n/**\n * @description Class Notes that represents multiple operations working with\n * the node filesystem utilities to create, modify, remove, read and list notes\n * from multiple users\n */\nexport class Notes {\n  private static NotesInstance: Notes;\n  /**\n   * @description Class Notes constructor, in this case, it does nothing\n   */\n  constructor() {\n    // This is intentional\n  }\n  /**\n   * @description Static getter method that returns the instance of the notes\n   * class and creates it if doesn't exist\n   * @return Returns a Notes instance\n   */\n  public static getNotesInstance(): Notes {\n    if (!Notes.NotesInstance) {\n      Notes.NotesInstance = new Notes();\n    }\n    return Notes.NotesInstance;\n  }\n\n  /**\n   * @description Method that adds a new note in a file to an users directory,\n   * creating the directory if it doesn't exist.\n   * @param user Consists of a string representing user's name\n   * @param title Consists of a string representing the user's note title\n   * @param body Consists of a string representing the user's note body\n   * @param color Consists of a string representing the user's note color\n   * @return Returns a string with the result of adding the note,\n   * or an error\n   */\n  public addNote(user: string, title: string, body: string, color: string) {\n    const data =\n      `{ \"title\": \"${title}\", \"body\": \"${body}\", \"color\": \"${color}\" }`;\n    const dir = this.getRoute(user);\n    const fileRoute = dir + `${title}`;\n    if (existsSync(fileRoute)) {\n      return 'Note title taken!';\n    }\n    writeFileSync(fileRoute, data);\n    return 'New note added!';\n  }\n\n  /**\n   * @description Method that modifies an existing note by specifying the user\n   * and the title of the note, rest of parameters are optional but if some are\n   * provided, the existing data will be overwritten by the new data\n   * @param user Consists of a string representing user's name\n   * @param title Consists of a string representing the user's note title\n   * @param body Consists of a string representing the user's note body\n   * @param color Consists of a string representing the user's note color\n   * @return Returns a string with the result of modifying the note,\n   * or an error\n   */\n  public modifyNote(user: string, title: string, body?: string,\n      color?: string) {\n    const dir = this.getRoute(user);\n    const fileRoute = dir + `${title}`;\n    if (!existsSync(fileRoute)) {\n      return noteNotFound;\n    }\n    const fileData = readFileSync(fileRoute);\n    const dataToJson = JSON.parse(fileData.toString());\n    let newBody = body;\n    let newColor = color;\n    if (body === undefined) {\n      newBody = dataToJson.body;\n    }\n    if (color === undefined) {\n      newColor = dataToJson.color;\n    }\n    const data =\n      `{ \"title\": \"${title}\", \"body\": \"${newBody}\", \"color\": \"${newColor}\" }`;\n    writeFileSync(fileRoute, data);\n    return 'Note modified succesfully!';\n  }\n\n  /**\n   * @description Method that removes an existing note by specifying the user\n   * and the title of the note\n   * @param user Consists of a string representing user's name\n   * @param title Consists of a string representing the user's note title\n   * @return Returns a string with the result of removing the note, or an error\n   */\n  public removeNote(user: string, title: string) {\n    const dir = this.getRoute(user);\n    const fileRoute = dir + `${title}`;\n    if (!existsSync(fileRoute)) {\n      return noteNotFound;\n    }\n    rmSync(fileRoute);\n    if (readdirSync(dir).length === 0) {\n      rmdirSync(dir);\n    }\n    return 'Note removed!';\n  }\n\n  /**\n   * @description Method for reading a specific user note\n   * @param user Consists of a string representing user's name\n   * @param title Consists of a string representing the user's note title\n   * @return Returns a string with the result of reading the note, or an error\n   */\n  public readNote(user: string, title: string) {\n    const dir = this.getRoute(user);\n    const fileRoute = dir + `${title}`;\n    if (!existsSync(fileRoute)) {\n      return noteNotFound;\n    }\n    const fileData = readFileSync(fileRoute);\n    const dataToJson = JSON.parse(fileData.toString());\n    const result =\n      dataToJson.title + '\\n' + chalk[dataToJson.color](dataToJson.body);\n    return result;\n  }\n\n  /**\n   * @description Method that lists all the notes from the user's directory.\n   * @param user Consists of a string representing user's name\n   * @return Returns a string with the result of listing all the user notes\n   */\n  public listNotes(user: string) {\n    const dir = this.getRoute(user);\n    let list = 'Your notes';\n    readdirSync(dir).forEach((file) => {\n      const fileData = readFileSync(dir + file);\n      const dataToJson = JSON.parse(fileData.toString());\n      const color: string = dataToJson.color;\n      list += chalk[color]('\\n' + dataToJson.title);\n    });\n    return list;\n  }\n\n  /**\n   * @description Getter method for checking if a route exists, creating it\n   * if doesn't exist\n   * @param user Consists of a string\n   * @return Returns a string\n   */\n  private getRoute(user: string) {\n    const route = `./db/${user}/`;\n    if (!existsSync(route)) {\n      mkdirSync(route);\n    }\n    return route;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"19f57c9b665bc6f3139b52eff749883821e17f7f","contentHash":"ea4771609c906882ed5f418aa86de72305d1239be2d5d8e291cb00551c2dc2b3"}}